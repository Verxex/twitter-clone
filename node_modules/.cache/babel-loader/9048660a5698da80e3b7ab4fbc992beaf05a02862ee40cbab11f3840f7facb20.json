{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport tweets from './Slices/TweetSlice';\nexport const store = configureStore({\n  reducer: {\n    tweets\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\nexport const useAppDispatch = useDispatch;","map":{"version":3,"names":["configureStore","useDispatch","tweets","store","reducer","useAppDispatch"],"sources":["H:/ReacktJS/twitter-clone-v1.001/src/components/Redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport tweets from './Slices/TweetSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    tweets,\r\n  },\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACPF;EACF;AACF,CAAC,CAAC;;AAEF;;AAIA,OAAO,MAAMG,cAAiC,GAAGJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}